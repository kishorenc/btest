--- foreign_cc/private/configure_script.bzl
+++ foreign_cc/private/configure_script.bzl
@@ -70,7 +70,7 @@
         ).lstrip())

     script.append("##mkdirs## $$BUILD_TMPDIR$$/$$INSTALL_PREFIX$$")
-    script.append("{env_vars} {prefix}\"{configure}\" --prefix=$$BUILD_TMPDIR$$/$$INSTALL_PREFIX$$ {user_options}".format(
+    script.append("{env_vars} {prefix}\"{configure}\" {user_options} --prefix=$$BUILD_TMPDIR$$/$$INSTALL_PREFIX$$".format(
         env_vars = get_make_env_vars(workspace_name, tools, flags, env_vars, deps, inputs),
         prefix = configure_prefix,
         configure = configure_path,


--- foreign_cc/private/cc_toolchain_util.bzl
+++ foreign_cc/private/cc_toolchain_util.bzl
@@ -265,15 +265,24 @@ def get_tools_info(ctx):
         cc_toolchain = cc_toolchain,
     )

+    cxx = cc_common.get_tool_for_action(
+            feature_configuration = feature_configuration,
+            action_name = ACTION_NAMES.cpp_compile,
+        )
+    cxx_splitted = cxx.split("/")
+    if(cxx_splitted[-1].startswith("gcc")):
+        cxx_splitted[-1] = cxx_splitted[-1].replace("gcc", "g++")
+        cxx = "/".join(cxx_splitted)
+    if(cxx_splitted[-1].startswith("clang")):
+        cxx_splitted[-1] = cxx_splitted[-1].replace("clang", "clang++")
+        cxx = "/".join(cxx_splitted)
+
     return CxxToolsInfo(
         cc = cc_common.get_tool_for_action(
             feature_configuration = feature_configuration,
             action_name = ACTION_NAMES.c_compile,
         ),
-        cxx = cc_common.get_tool_for_action(
-            feature_configuration = feature_configuration,
-            action_name = ACTION_NAMES.cpp_compile,
-        ),
+        cxx = cxx,
         cxx_linker_static = cc_common.get_tool_for_action(
             feature_configuration = feature_configuration,
             action_name = ACTION_NAMES.cpp_link_static_library,
